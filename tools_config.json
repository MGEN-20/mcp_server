{
  "tools": {
    "list_all_users": {
      "title": "üë• List All Users",
      "description": "Retrieve a complete list of all users in the system. This endpoint is useful for administrative purposes, allowing access to all user accounts for management tasks. It supports returning user data such as IDs, names, and emails. Since it can return a significant amount of data, pagination or filtering is recommended to manage the response size effectively.",
      "external_api": "https://jsonplaceholder.typicode.com/users",
      "method": "GET",
      "timeout": 60.0,
      "large_data_fetch": true
    },
    "create_user": {
      "title": "‚ûï Create User",
      "description": "Allows the creation of a new user in the system by providing necessary user details such as name and email in the request body. The endpoint expects a JSON object conforming to the UserInput schema. It returns a success code upon successful execution. This operation is essential for expanding the user base or registering new accounts.",
      "external_api": "https://httpbin.org/post",
      "method": "POST",
      "timeout": 30.0,
      "large_data_fetch": false
    },
    "get_user_by_id": {
      "title": "üë§ Get User By ID",
      "description": "Fetches details of a specific user identified by their unique ID. It requires the user's ID as a path parameter and returns complete user information. This is vital for retrieving individual user details for profile displays or personal account management.",
      "external_api": "https://jsonplaceholder.typicode.com/users/{id}",
      "method": "GET",
      "timeout": 30.0,
      "large_data_fetch": false
    },
    "delete_user": {
      "title": "üóëÔ∏è Delete User",
      "description": "Deletes a user identified by their unique ID from the system. This operation requires an ID provided as a path parameter, and it returns a success status code if the deletion is successful. Utilized in scenarios requiring user data management and account removals.",
      "external_api": "https://httpbin.org/delete",
      "method": "DELETE",
      "timeout": 30.0,
      "large_data_fetch": false
    },
    "list_all_products": {
      "title": "üì¶ List All Products",
      "description": "Fetches a list of all available products. This endpoint supports returning an array of products complete with details like title, price, and category. It's particularly useful for inventory displays, product catalog listings, and marketing insights. This endpoint can potentially return large datasets, necessitating pagination or filtering mechanisms.",
      "external_api": "https://fakestoreapi.com/products",
      "method": "GET",
      "timeout": 60.0,
      "large_data_fetch": true
    },
    "create_product": {
      "title": "‚ûï Create Product",
      "description": "Facilitates the addition of new products into the system by allowing submission of product details like title, price, and category in a structured JSON format. It's essential for inventory managers to introduce new products into the catalog.",
      "external_api": "https://httpbin.org/post",
      "method": "POST",
      "timeout": 30.0,
      "large_data_fetch": false
    },
    "get_product_by_id": {
      "title": "üîç Get Product By ID",
      "description": "Retrieves details of a specific product based on the provided product ID path parameter. This endpoint is useful for viewing or editing product properties by staff or customers.",
      "external_api": "https://fakestoreapi.com/products/{id}",
      "method": "GET",
      "timeout": 30.0,
      "large_data_fetch": false
    },
    "list_all_orders": {
      "title": "üìú List All Orders",
      "description": "Returns a list of all orders placed in the system, including details like order ID, user ID, product IDs, and status. Typically used by customer service teams to track and manage orders. The potentially large dataset makes it advisable to integrate pagination mechanisms.",
      "external_api": "https://mockapi.io/orders",
      "method": "GET",
      "timeout": 60.0,
      "large_data_fetch": true
    },
    "create_order": {
      "title": "‚ûï Create Order",
      "description": "Allows the creation of a new order by submitting order details such as user ID and product IDs as a JSON object. This is crucial for processing customer purchases within the e-commerce platform.",
      "external_api": "https://httpbin.org/post",
      "method": "POST",
      "timeout": 30.0,
      "large_data_fetch": false
    },
    "get_order_by_id": {
      "title": "üîç Get Order By ID",
      "description": "Provides detailed information about a specific order based on a unique order ID, necessary for customer support inquiries or order tracking purposes.",
      "external_api": "https://mockapi.io/orders/{id}",
      "method": "GET",
      "timeout": 30.0,
      "large_data_fetch": false
    },
    "user_login": {
      "title": "üîê User Login",
      "description": "Handles user authentication by verifying login credentials (email and password) through a POST request. Upon success, returns a JSON object containing a security token and user details. Use cases include allowing users to access the system functionality that requires authentication.",
      "external_api": "https://httpbin.org/post",
      "method": "POST",
      "timeout": 30.0,
      "large_data_fetch": false
    },
    "health_check": {
      "title": "üö¶ Health Check",
      "description": "Checks the health status of the server, returning a status message and timestamp. Crucial for ensuring service availability and system reliability checks.",
      "external_api": "https://httpstat.us/200",
      "method": "GET",
      "timeout": 5.0,
      "large_data_fetch": false
    }
  },
  "server": {
    "title": "üöÄ Autogenerated MCP FastAPI Server",
    "host": "0.0.0.0",
    "port": 8000
  }
}