{
  "tools": {
    "get_all_users": {
      "title": "üë• Get All Users",
      "description": "Retrieves a list of all registered users from the e-commerce system. No input parameters are required. Returns an array of user objects containing id, name, and email. Useful for admin panels and reporting. Common errors include server issues resulting in a 500 error.",
      "external_api": "https://api.myshop.com/v1/users",
      "method": "GET",
      "timeout": 30.0
    },
    "create_user": {
      "title": "‚ûï Create User",
      "description": "Creates a new user in the system. Expects a JSON body adhering to the UserInput schema with required fields like name and email. Returns a 201 status on successful creation. Errors may occur due to validation failures or missing fields.",
      "external_api": "https://api.myshop.com/v1/users",
      "method": "POST",
      "timeout": 30.0
    },
    "get_user_by_id": {
      "title": "üîç Get User by ID",
      "description": "Fetches details for a specific user identified by the user ID provided as a path parameter. Returns detailed user information. Ideal for user profile displays. Returns a 404 error if the user is not found.",
      "external_api": "https://api.myshop.com/v1/users/{id}",
      "method": "GET",
      "timeout": 30.0
    },
    "get_all_products": {
      "title": "üõçÔ∏è Get All Products",
      "description": "Retrieves a list of all available products in the e-commerce catalog. No parameters required. Useful for storefront displays and inventory management. Returns an array of product objects or an empty array if no products are available. Handles server errors appropriately.",
      "external_api": "https://api.myshop.com/v1/products",
      "method": "GET",
      "timeout": 30.0
    },
    "create_product": {
      "title": "‚ûï Create Product",
      "description": "Creates a new product entry in the catalog. Expects a JSON body following the ProductInput schema with fields such as title and price. Returns a 201 status upon successful creation. Errors include validation issues and missing required fields.",
      "external_api": "https://api.myshop.com/v1/products",
      "method": "POST",
      "timeout": 30.0
    },
    "get_product_by_id": {
      "title": "üîç Get Product by ID",
      "description": "Fetches detailed information about a specific product identified by its unique ID provided as a path parameter. Returns product details as defined in the Product schema. Used for product detail pages. Returns a 404 error if the product does not exist.",
      "external_api": "https://api.myshop.com/v1/products/{id}",
      "method": "GET",
      "timeout": 30.0
    },
    "create_order": {
      "title": "üõí Create Order",
      "description": "Places a new order in the system using order data provided in the JSON body (user_id and products array). Returns a 201 status on successful order creation. This endpoint is essential for the checkout process and includes validation to ensure correct references to user and products. Errors are returned on missing or invalid fields.",
      "external_api": "https://api.myshop.com/v1/orders",
      "method": "POST",
      "timeout": 30.0
    }
  },
  "server": {
    "title": "üöÄ Autogenerated MCP FastAPI Server",
    "host": "0.0.0.0",
    "port": 8000
  }
}