{
  "tools": {
    "get_all_users": {
      "title": "üë• Get All Users",
      "description": "Retrieves the complete list of users registered in the system. This endpoint does not require any parameters. The response is an array of user objects (including id, name, and email). Use this endpoint for admin dashboards, user management interfaces, or audit logs. Common errors include server failures or if the data cannot be retrieved, an HTTP error code may be returned.",
      "external_api": "https://api.myshop.com/v1/users",
      "method": "GET",
      "timeout": 30.0
    },
    "create_user": {
      "title": "üÜï Create User",
      "description": "Creates a new user in the system. The required payload includes name and email. The endpoint expects a valid JSON body conforming to the UserInput schema. It returns a status code 201 when the user is successfully created. Potential errors include validation errors (e.g., missing required fields) or server errors.",
      "external_api": "https://api.myshop.com/v1/users",
      "method": "POST",
      "timeout": 30.0
    },
    "get_user_by_id": {
      "title": "üîç Get User by ID",
      "description": "Fetches the details of a single user specified by the user ID provided in the path parameter. The response consists of the user's detailed information such as id, name, and email. Use this endpoint when user-specific information is needed. A 404 error is returned if the user with the specified ID does not exist.",
      "external_api": "https://api.myshop.com/v1/users/{id}",
      "method": "GET",
      "timeout": 30.0
    },
    "get_all_products": {
      "title": "üì¶ Get All Products",
      "description": "Retrieves a list of all products available in the e-commerce store. This endpoint does not require any parameters. The response contains an array of product objects that include details such as id, title, and price. It is typically used for catalog displays and inventory management. Error scenarios include server issues or problems fetching product data.",
      "external_api": "https://api.myshop.com/v1/products",
      "method": "GET",
      "timeout": 30.0
    },
    "create_product": {
      "title": "üÜï Create Product",
      "description": "Creates a new product entry in the system. The endpoint requires a JSON payload containing the product title and price, conforming to the ProductInput schema. A successful creation returns a 201 status code. Validation errors or server issues may result in error responses.",
      "external_api": "https://api.myshop.com/v1/products",
      "method": "POST",
      "timeout": 30.0
    },
    "get_product_by_id": {
      "title": "üîç Get Product by ID",
      "description": "Fetches detailed information for a single product using its ID as a path parameter. The returned data follows the Product schema with properties such as id, title, and price. This endpoint is useful for product detail pages and inventory lookups. Common errors include 404 if the product is not found.",
      "external_api": "https://api.myshop.com/v1/products/{id}",
      "method": "GET",
      "timeout": 30.0
    },
    "create_order": {
      "title": "üõí Create Order",
      "description": "Creates a new order based on the provided order input, which must include a user ID and a list of product IDs. The endpoint expects a JSON payload conforming to the OrderInput schema. A successful operation returns a 201 status code. Errors might include validation failures or issues during order processing.",
      "external_api": "https://api.myshop.com/v1/orders",
      "method": "POST",
      "timeout": 30.0
    }
  },
  "server": {
    "title": "üöÄ Autogenerated MCP FastAPI Server",
    "host": "0.0.0.0",
    "port": 8000
  }
}