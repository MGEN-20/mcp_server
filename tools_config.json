{
  "tools": {
    "get_all_users": {
      "title": "üë• Get All Users",
      "description": "Retrieves a list of all users. Useful for user management or dashboards where administrators need an overview of users. The response contains an array of user objects. Fails with 404 if the server cannot be reached or returns empty if no users are available.",
      "external_api": "https://jsonplaceholder.typicode.com/users",
      "method": "GET",
      "timeout": 60.0
    },
    "create_user": {
      "title": "‚úçÔ∏è Create User",
      "description": "Creates a new user in the system. Requires name and email in the request body. Useful for user registration or adding new staff accounts. A response of 201 indicates success, while other codes may indicate validation errors or server issues.",
      "external_api": "https://httpbin.org/post",
      "method": "POST",
      "timeout": 30.0
    },
    "get_user_by_id": {
      "title": "üßê Get User By ID",
      "description": "Fetches details for a specific user identified by their unique ID. Essential for rendering detailed user profiles. Returns user details if found, otherwise 404 if the user ID does not exist.",
      "external_api": "https://jsonplaceholder.typicode.com/users/{id}",
      "method": "GET",
      "timeout": 30.0
    },
    "delete_user": {
      "title": "‚ùå Delete User",
      "description": "Deletes a user specified by ID. This is an irreversible operation ideal for account removal requests or cleanup tasks. Successful removal is indicated by a 204 response, while failures may return 404 if the user ID is not found.",
      "external_api": "https://jsonplaceholder.typicode.com/users/{id}",
      "method": "DELETE",
      "timeout": 30.0
    },
    "get_all_products": {
      "title": "üõçÔ∏è Get All Products",
      "description": "Fetches a list of all available products in the inventory. Useful for displaying products in shopping interfaces or inventory management. The response comprises an array of product objects. Service unavailability triggers a 404 status.",
      "external_api": "https://fakestoreapi.com/products",
      "method": "GET",
      "timeout": 60.0
    },
    "create_product": {
      "title": "‚ûï Create Product",
      "description": "Adds a new product to the inventory. Requires a structured input of title, price, and category. Ideal for expanding product offerings or content management systems. On creation success, a 201 status is returned, while errors might indicate validation issues.",
      "external_api": "https://dummyjson.com/products/add",
      "method": "POST",
      "timeout": 30.0
    },
    "get_product_by_id": {
      "title": "üîç Get Product By ID",
      "description": "Retrieves detailed information about a specific product using its ID. Useful for product detail pages in e-commerce applications. If a product exists, product details are returned, otherwise a 404 is given if no such product is found.",
      "external_api": "https://fakestoreapi.com/products/{id}",
      "method": "GET",
      "timeout": 30.0
    },
    "get_all_orders": {
      "title": "üì¶ Get All Orders",
      "description": "Lists all orders placed in the system. This endpoint is valuable for tracking sales, processing dispatches, and generating sales reports. Returns an array of orders or empty if none are available. Can return a 404 if unavailable.",
      "external_api": "https://mockapi.io/orders",
      "method": "GET",
      "timeout": 60.0
    },
    "create_order": {
      "title": "üöö Create Order",
      "description": "Places a new order with defined user and product context. It supports bulk processing and requires user_id and products list. A successful 201 response indicates order acceptance. Possible errors include validation failures.",
      "external_api": "https://mockapi.io/orders",
      "method": "POST",
      "timeout": 30.0
    },
    "get_order_by_id": {
      "title": "üìÉ Get Order By ID",
      "description": "Fetches order specifics using order ID. This functionality is essential for viewing purchase details and order status. A 200 response includes order details, while a 404 indicates no matching order.",
      "external_api": "https://mockapi.io/orders/{id}",
      "method": "GET",
      "timeout": 30.0
    },
    "user_login": {
      "title": "üîë User Login",
      "description": "Authenticates a user and issues a token upon success. This endpoint is critical for security and session management in client applications. Expects email and password, returning a user object and token. Errors may include authentication failure or server errors.",
      "external_api": "https://reqres.in/api/login",
      "method": "POST",
      "timeout": 30.0
    },
    "health_check": {
      "title": "ü©∫ Health Check",
      "description": "Checks the health status of the server, primarily used for monitoring and alert systems. Provides a simple 'ok' status and timestamp upon successful responses. May fail with 503 if service is down.",
      "external_api": "https://httpstat.us/200",
      "method": "GET",
      "timeout": 10.0
    }
  },
  "server": {
    "title": "üöÄ Autogenerated MCP FastAPI Server",
    "host": "0.0.0.0",
    "port": 8000
  }
}