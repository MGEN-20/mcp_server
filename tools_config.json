{
  "tools": {
    "get_all_users": {
      "title": "üë• Get All Users",
      "description": "Retrieves a complete list of all users registered in the application. This operation requires no parameters and returns a comprehensive list of users in JSON format. The response is useful for populating user directories, administrative dashboards, or analytical processing of user data. Consider implementing pagination in consumer to handle large datasets effectively.",
      "external_api": "https://jsonplaceholder.typicode.com/users",
      "method": "GET",
      "timeout": 60.0
    },
    "create_user": {
      "title": "‚úçÔ∏è Create User",
      "description": "Allows the creation of a new user by providing necessary information such as name and email in the request body. The body must follow the specified schema format. This endpoint returns a confirmation upon successful creation and is typically used in user registration forms.",
      "external_api": "https://httpbin.org/post",
      "method": "POST",
      "timeout": 30.0
    },
    "get_user_by_id": {
      "title": "üîç Get User by ID",
      "description": "Fetches detailed information about a user by their unique ID. Pass the user 'id' as a path parameter. This endpoint is essential for profile displays, edit user interfaces, or order/account management systems. Returns full user details as JSON.",
      "external_api": "https://jsonplaceholder.typicode.com/users/{id}",
      "method": "GET",
      "timeout": 30.0
    },
    "delete_user": {
      "title": "üóëÔ∏è Delete User",
      "description": "Physically removes a user from the system using their unique ID. This endpoint requires an 'id' as a path parameter and does not require a request body. It confirms deletion with a 204 status. Useful for user account management, especially in scenarios of account closure or administrative cleanup.",
      "external_api": "https://httpbin.org/delete",
      "method": "DELETE",
      "timeout": 30.0
    },
    "get_all_products": {
      "title": "üõí Get All Products",
      "description": "Retrieves a list of all products available in the catalog. No parameters are needed. The response includes product details in JSON format, ideal for displaying product listings, inventory checks, or integrating product data into e-commerce front-ends.",
      "external_api": "https://fakestoreapi.com/products",
      "method": "GET",
      "timeout": 60.0
    },
    "create_product": {
      "title": "‚ú® Create Product",
      "description": "Facilitates the addition of a new product into the store's catalog by accepting product data such as title, price, and category. This data follows a strict schema and is submitted via POST. Returns success upon creation, assisting in inventory management and product line expansion.",
      "external_api": "https://httpbin.org/post",
      "method": "POST",
      "timeout": 30.0
    },
    "get_product_by_id": {
      "title": "üîç Get Product by ID",
      "description": "Provides detailed information on a specific product, identified by its unique ID. Use the 'id' as a path parameter to retrieve product specifics. This is crucial for product detail pages, order processing, or inventory management applications.",
      "external_api": "https://fakestoreapi.com/products/{id}",
      "method": "GET",
      "timeout": 30.0
    },
    "get_all_orders": {
      "title": "üì¶ Get All Orders",
      "description": "Returns a list of all orders placed within the system. Useful for order management, auditing, or generating sales reports. The returned data includes order details formatted in JSON. No parameters are needed for this request.",
      "external_api": "https://mockapi.io/orders",
      "method": "GET",
      "timeout": 60.0
    },
    "create_order": {
      "title": "üìù Create Order",
      "description": "Enables the creation of a new order by providing user ID and a list of product IDs. The request body must comply with a specified order schema. Successful requests return an order confirmation and detail, applicable in the order processing workflows.",
      "external_api": "https://mockapi.io/orders",
      "method": "POST",
      "timeout": 30.0
    },
    "get_order_by_id": {
      "title": "üîç Get Order by ID",
      "description": "Fetches the details of an order with a specified order ID. This endpoint is crucial for tracking order status, processing returns, or customer service inquiries, returning comprehensive order information as a JSON object.",
      "external_api": "https://mockapi.io/orders/{id}",
      "method": "GET",
      "timeout": 30.0
    },
    "user_login": {
      "title": "üîê User Login",
      "description": "Handles user authentication by accepting an email and password in the request body. A successful login returns a JWT token and user details, facilitating secure access to protected resources. This endpoint is essential for applications requiring authenticated user actions.",
      "external_api": "https://reqres.in/api/login",
      "method": "POST",
      "timeout": 30.0
    },
    "health_check": {
      "title": "ü©∫ Health Check",
      "description": "Provides a simple health check to confirm that the service is operational. Returns a status and timestamp, ideal for monitoring tools or uptime tracking solutions to ensure service availability.",
      "external_api": "https://httpstat.us/200",
      "method": "GET",
      "timeout": 30.0
    }
  },
  "server": {
    "title": "üöÄ Autogenerated MCP FastAPI Server",
    "host": "0.0.0.0",
    "port": 8000
  }
}