{
  "tools": {
    "get_all_users": {
      "title": "👥 Get All Users",
      "description": "Retrieve a list of all users in the system. This endpoint does not require any parameters and returns an array of user objects including id, name, and email. This tool is useful for admin dashboards, reporting, and user management tasks.",
      "external_api": "/users",
      "method": "GET",
      "timeout": 30.0
    },
    "create_user": {
      "title": "👤 Create User",
      "description": "Create a new user account by sending user details such as name and email in the request body. The response includes the created user's information. Useful for registration flows in applications.",
      "external_api": "/users",
      "method": "POST",
      "timeout": 30.0
    },
    "get_user_by_id": {
      "title": "👤 Get User by ID",
      "description": "Retrieve a specific user's details by their unique ID. This uses a path parameter 'userId'. Commonly used in profile views where specific user details are needed.",
      "external_api": "/users/{userId}",
      "method": "GET",
      "timeout": 30.0
    },
    "update_user": {
      "title": "✏️ Update User Information",
      "description": "Update fields of a specific user by providing 'userId' as a path parameter and new data as the request body. This operation returns the updated user object. Often used in user profile maintenance.",
      "external_api": "/users/{userId}",
      "method": "PATCH",
      "timeout": 30.0
    },
    "delete_user": {
      "title": "❌ Delete User",
      "description": "Remove a user from the system using their 'userId'. It offers no response content and is useful for account management tasks like handling inactive users.",
      "external_api": "/users/{userId}",
      "method": "DELETE",
      "timeout": 30.0
    },
    "get_all_products": {
      "title": "📦 Get All Products",
      "description": "Retrieve a list of all products available in the catalog. This tool does not require parameters and returns product arrays including id, name, and price. Useful for web shops displaying product categories.",
      "external_api": "/products",
      "method": "GET",
      "timeout": 30.0
    },
    "create_product": {
      "title": "📦 Create Product",
      "description": "Add a new product to the catalog by providing product details in the request body, such as name and price. The response includes the product information. Essential for inventory management.",
      "external_api": "/products",
      "method": "POST",
      "timeout": 30.0
    },
    "get_product_by_id": {
      "title": "🔍 Get Product by ID",
      "description": "Retrieve details of a specific product using its 'productId'. This is typically used in product detail pages within a shopping application.",
      "external_api": "/products/{productId}",
      "method": "GET",
      "timeout": 30.0
    },
    "create_order": {
      "title": "🛒 Create Order",
      "description": "Place a new order by submitting user id and a list of products in the request body. Returns the order details upon creation. Useful in shopping cart checkouts.",
      "external_api": "/orders",
      "method": "POST",
      "timeout": 30.0
    },
    "get_order_by_id": {
      "title": "📋 Get Order by ID",
      "description": "Retrieve details of a specific order using the 'orderId'. Essential for tracking orders in a user account section.",
      "external_api": "/orders/{orderId}",
      "method": "GET",
      "timeout": 30.0
    },
    "login_user": {
      "title": "🔑 Log In",
      "description": "Authenticate a user via email and password, retrieving an access token for session management. Supports securing endpoints in user-driven applications.",
      "external_api": "/auth/login",
      "method": "POST",
      "timeout": 30.0
    },
    "logout_user": {
      "title": "🚪 Log Out",
      "description": "Invalidate the current user session. This enhances security by preventing unauthorized use of the session cookie after logout.",
      "external_api": "/auth/logout",
      "method": "POST",
      "timeout": 30.0
    },
    "health_check": {
      "title": "🔍 Health Check",
      "description": "Check if the service is running by returning the service status and timestamp. Useful for monitoring and alerting systems.",
      "external_api": "/health",
      "method": "GET",
      "timeout": 30.0
    },
    "get_sales_analytics": {
      "title": "📊 Get Sales Analytics",
      "description": "Retrieve and analyze sales data over a specified period, including total sales and top-selling products. This endpoint is key for business insights and performance reviews.",
      "external_api": "/analytics/sales",
      "method": "GET",
      "timeout": 30.0
    },
    "get_version": {
      "title": "ℹ️ Get API Version",
      "description": "Fetches the current version of the API including version number, build, and release date. Useful for debugging and reporting compatibility issues.",
      "external_api": "/version",
      "method": "GET",
      "timeout": 30.0
    }
  },
  "server": {
    "title": "🚀 Autogenerated MCP FastAPI Server",
    "host": "0.0.0.0",
    "port": 8000
  }
}